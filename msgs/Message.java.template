package $package;

import com.chat.msgs.Message;
import com.chat.util.buffer.ReadBuffer;
import com.chat.util.buffer.ReadWriteBuffer;

public class ${msg.name}Message implements Message {
#for $field in $msg.fields
    private final $field.type $field.name;
#end for

    public ${msg.name}Message(ReadBuffer stream) {
    #for $field in $msg.fields
        this.$field.name = stream.read${field.type.capitalize()}();
    #end for
    }

    public ${msg.name}Message(#echo ', '.join($msg.fieldTypeNames)#) {
    #for $field in $msg.fields
        this.$field.name = $field.name;
    #end for
    }
#for $field in $msg.fields

    public $field.type get${field.nameCap}() {
        return $field.name;
    }
#end for

    @Override
    public void write(ReadWriteBuffer stream) {
        int position = stream.position();
        // skip 2 bytes for length of message
        stream.advance(2);
   
        stream.writeByte(MessageTypes.${msg.name}.getValue());
    #for $field in $msg.fields
        stream.write${field.type.capitalize()}(get${field.nameCap}());
    #end for

        // write out length of message
        stream.writeShort(position, stream.position() - position - 2);
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append("Msg=${msg.name}");
    #for $field in $msg.fields
        builder.append(",${field.nameCap}=").append(get${field.nameCap}());
    #end for
        return builder.toString();        
    }
} 
